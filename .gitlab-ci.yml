image: docker:stable

before_script:
  - export LOWERCASE_PROJECT_NAMESPACE=$(echo $CI_PROJECT_NAMESPACE | tr '[:upper:]' '[:lower:]')
  - export LOWERCASE_PROJECT_NAME=$(echo $CI_PROJECT_NAME | tr '[:upper:]' '[:lower:]')
  - export IMAGE="${CI_REGISTRY}/${LOWERCASE_PROJECT_NAMESPACE}/${LOWERCASE_PROJECT_NAME}"

stages:
  - build
  - test

variables:
#  IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  LOWERCASE_NAMESPACE: "viktar-t"
  IMAGE: "registry.gitlab.com/${LOWERCASE_NAMESPACE}/django_tdd_docker"

build:
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - cd app
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE:latest || true
    - docker build
        --cache-from $IMAGE:latest
        --tag $IMAGE:latest
        --file ./Dockerfile.prod
        "."
    - docker push $IMAGE:latest

test:
  stage: test
  image: $IMAGE:latest
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: users
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: runner
    DATABASE_TEST_URL: postgresql://runner:runner@postgres:5432/users
  script:
    - cd app
    - python manage.py migrate  # Add this line to apply migrations
    - pytest -p no:warnings --cov=.
    # - flake8 .
    # - black --check --exclude=migrations .
    # - isort . --check-only
